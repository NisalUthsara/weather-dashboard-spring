spring.application.name=weather-backend

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# Kafka bootstrap (in Docker Compose we pass KAFKA_BOOTSTRAP_SERVERS env)
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=weather-consumers
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Optional: control how often the scheduler polls (ms)
weather.poll.rate=50000

# Let Spring JPA validate schema (we run Flyway migrations)
spring.jpa.hibernate.ddl-auto=validate

# Trust package for JSON deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=com.weather.weather_backend.dto